/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.beust/jcommander
    implementation 'com.beust:jcommander:1.82'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.3.0'


    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
    implementation 'io.github.bonigarcia:webdrivermanager:5.2.0'

    //Gson dependency for parsing JSON files
    implementation 'com.google.code.gson:gson:2.9.0'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
}

application {
    // Define the main class for the application.
    mainClass = 'xyz.zimtools.zyod.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jar {
    manifest {
        //Attributes to add to
        attributes("Main-Class": "xyz.zimtools.zyod.App")
    }
}

test {
    filter {
        excludeTestsMatching("InteractTest")
        excludeTestsMatching("xyz.zimtools.zyod.extra.*")
    }
}

shadowJar {
    archivesBaseName = "zyod"
    archiveClassifier = ""
}

tasks.register("renameDist", Copy) {
    group "custom"
    it.dependsOn(tasks.assembleShadowDist)
    from layout.buildDirectory.dir("distributions"), layout.buildDirectory.dir("libs")
    rename { String filename -> return "zyod" + filename[filename.size() - 4..filename.size() - 1] }
    into layout.buildDirectory.dir("release")
}

tasks.register('noDistDir', Delete) {
    group "custom"
    delete layout.buildDirectory.dir("distributions"), layout.buildDirectory.dir("libs")
}
